1. What are the 4 steps you need to keep in mind while programming recursive methods?

2. Write a recursive method to compute the nth fibonacci number. Draw the stack associated with how your program is run
The nth fibonacci number is computer by taking the sum of the previous 2 recursive numbers. Big(O)
fib(1) = 1
fib(2) = 1
fib(3) = 2
fib(4) = 3
fib(5) = 5
fib(6) = 8
fib(7) = 13

3. Write an instance method get for the LinkedList class. For this question, you may use the Node classes' getNext() method
to iterate through the linked list. You must implement this method recursively. Big(O)?

public E get(int index) {
  
}

4. Write a method that removes the vowels from a string. 

Example: 
removeVowels("recurse") -> "rcrs"

5. Write a method to compute the factorial of a number n. Write this method using recursion.

public int factorial(int n) {

}

6. Recursive Backtracking

Write a method rollDice that takes in an int n for the number of dice to roll. 
Compute every possible combination of n dice using recursive tracking. You do not need 
to return anything, simply print out each complete combination. 

ex. rollDice(1) prints...
[1]
[2]
[3]
[4]
[5]
[6]

rollDice(2) prints... 
[1, 1]
[1, 2]
[1, 3]
[1, 4]
[1, 5]
[1, 6]
[2, 1]
[2, 2]
[2, 3]
[2, 4]
[2, 5]
[2, 6]
[3, 1]
[3, 2]
[3, 3]
[3, 4]
[3, 5]
[3, 6]
[4, 1]
[4, 2]
[4, 3]
[4, 4]
[4, 5]
[4, 6]
[5, 1]
[5, 2]
[5, 3]
[5, 4]
[5, 5]
[5, 6]
[6, 1]
[6, 2]
[6, 3]
[6, 4]
[6, 5]
[6, 6]
